@using Microsoft.AspNetCore.Identity;
@model PROG3050.ViewModel.GameDetailsViewModel
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Game Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUser = await UserManager.GetUserAsync(User);
}

<h1>Game Details</h1>

<div>
    <h4>Game</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Title)
        </dt>
        <dd class = "col-sm-10" id = "text_title">
            @Html.DisplayFor(model => model.Game.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Game.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Game.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Game.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Game.PublishDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Game.PublishDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Game.GameCategory)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Game.GameCategory.GameCategoryName)
        </dd>
    </dl>
</div>
<div>
    <form asp-controller="Cart" asp-action="AddToCart" method="post">
        <input type="hidden" name="gameId" value="@Model?.Game?.GameId" />
        <button type="submit" class="btn btn-warning">Add to Cart <i class="fa fa-cart-plus"></i></button>
    </form>

    @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin") || User.IsInRole("Moderator"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Game.GameId">Edit</a> @("|")
    }

    @if (!string.IsNullOrEmpty(ViewBag.AddedGameMessage))
    {
        <div class="alert alert-success mt-3" role="alert">
            @ViewBag.AddedGameMessage
        </div>
    }
</div>
<div>
    <hr />
    <h4>Recommended Games</h4>
    @if (Model != null)
    {
        if (Model.RecommendedGames.Any())
        {
            if (Model.SameCategory)
            {
                <h6>Discover games similar to @Html.DisplayFor(model => model.Game.Title)</h6>
            }
            else
            {
                <h6>We don't have any other games like @Html.DisplayFor(model => model.Game.Title). Maybe try one of our newest titles!</h6>
            }
            <div>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.RecommendedGames.First().Title)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.RecommendedGames.First().Price)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.RecommendedGames.First().PublishDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.RecommendedGames.First().GameCategory)
                            </th>
                            @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin") || User.IsInRole("Moderator"))
                            {
                                <th></th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.RecommendedGames)
                        {
                            <tr style="cursor:pointer;" onclick="location.href = '@Url.Action("Details", "Games", new { id = item.GameId })'">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Title)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PublishDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.GameCategory.GameCategoryName)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        } 
        else
        {
            <h6>Sorry, but we don't have any other games yet!</h6>
        }
    }
</div>
<div>
    <hr />
    <h4>Reviews</h4>
    @if (Model != null)
    {
        if (Model.Reviews != null)
        {
            if (Model.Reviews.Count() != 0)
            {
                foreach (var review in Model.Reviews)
                {
                    if (review.Status != "Pending")
                    {
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@review.Title</h5>
                                <h6 class="card-subtitle mb-2 text-muted">Posted by @review.User.UserName</h6>
                                <span class="text-warning">
                                    @for (var i = 0; i < review.Rating; i++)
                                    {
                                        <i class="fas fa-star"></i>
                                    }
                                </span>
                                <p class="card-text">@review.Description</p>
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <p>No Review to display.</p>
            }
        }
    }

    <hr />
    <h4>Write your Review</h4>

    <form method="post" asp-controller="Reviews" asp-action="WriteReview">
        <input type="hidden" name="GameId" id="GameId" value="@Model.Game.GameId" />
        <input type="hidden" name="UserId" id="UserId" value="@currentUser.Id" />
        <div class="form-floating mb-3">
            <input type="text" class="form-control" name="Title" id="Title" />
            <label class="form-label">Title <span style="color: red;">*</span></label>
        </div>
        <div class="form-floating mb-3">
            <input type="text" class="form-control" name="Description" id="Description" />
            <label class="form-label">Description <span style="color: red;">*</span></label>
        </div>
        <div class="form-group mb-3">
            <label>Rating</label>
            <div class="d-flex">
                <span class="text-warning">
                    <i class="fas fa-star rating-star" value="1"></i>
                    <i class="fas fa-star rating-star" value="2"></i>
                    <i class="fas fa-star rating-star" value="3"></i>
                    <i class="far fa-star rating-star" value="4"></i>
                    <i class="far fa-star rating-star" value="5"></i>
                </span>
                <input name="Rating" id="Rating" type="hidden" value="3" />
            </div>
        </div>

        <button type="submit" class="btn btn-primary" id="btnWriteReview">Write Review</button>
    </form>
</div>